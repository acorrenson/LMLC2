DIGEST 9f7885fcf05a5a473c2f5a8411d3ea76
FLMLCProof.Transpiler
R30:34 LMLCProof.Utils <> <> lib
R36:41 LMLCProof.Source <> <> lib
R43:48 LMLCProof.Object <> <> lib
def 61:64 <> lmlc
R71:77 LMLCProof.Source <> ml_term ind
binder 67:67 <> M:1
R82:92 LMLCProof.Object <> lambda_term ind
R103:103 LMLCProof.Transpiler <> M:1 var
R114:116 LMLCProof.Source <> Var constr
R123:126 LMLCProof.Object <> Lvar constr
R134:137 LMLCProof.Source <> Appl constr
R146:150 LMLCProof.Object <> Lappl constr
R162:165 LMLCProof.Transpiler <> lmlc:2 def
R153:156 LMLCProof.Transpiler <> lmlc:2 def
R158:158 LMLCProof.Transpiler <> M:1 var
R174:176 LMLCProof.Source <> Fun constr
R185:188 LMLCProof.Object <> Labs constr
R193:196 LMLCProof.Transpiler <> lmlc:2 def
R198:198 LMLCProof.Transpiler <> M:1 var
R205:210 LMLCProof.Source <> Fixfun constr
R222:244 LMLCProof.Object <> turing_fixpoint_applied def
R247:250 LMLCProof.Object <> Labs constr
R255:258 LMLCProof.Object <> Labs constr
R263:266 LMLCProof.Transpiler <> lmlc:2 def
R268:268 LMLCProof.Transpiler <> M:1 var
R278:281 LMLCProof.Source <> Plus constr
R299:303 LMLCProof.Source <> fresh def
R306:306 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R313:318 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R325:325 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R307:310 LMLCProof.Source <> fvML def
R312:312 LMLCProof.Transpiler <> M:1 var
R319:322 LMLCProof.Source <> fvML def
binder 294:294 <> s:4
R340:344 LMLCProof.Source <> fresh def
R346:346 LMLCProof.Utils <> :::'['_x_';'_'..'_';'_x_']' not
R348:348 LMLCProof.Utils <> :::'['_x_';'_'..'_';'_x_']' not
R347:347 LMLCProof.Transpiler <> s:4 var
binder 335:335 <> z:5
R353:363 LMLCProof.Object <> church_plus def
R385:385 LMLCProof.Transpiler <> z:5 var
R383:383 LMLCProof.Transpiler <> s:4 var
R375:378 LMLCProof.Transpiler <> lmlc:2 def
R366:369 LMLCProof.Transpiler <> lmlc:2 def
R371:371 LMLCProof.Transpiler <> M:1 var
R391:395 LMLCProof.Source <> Minus constr
R404:415 LMLCProof.Object <> church_minus def
R427:430 LMLCProof.Transpiler <> lmlc:2 def
R418:421 LMLCProof.Transpiler <> lmlc:2 def
R423:423 LMLCProof.Transpiler <> M:1 var
R439:443 LMLCProof.Source <> Times constr
R452:463 LMLCProof.Object <> church_times def
R475:478 LMLCProof.Transpiler <> lmlc:2 def
R466:469 LMLCProof.Transpiler <> lmlc:2 def
R471:471 LMLCProof.Transpiler <> M:1 var
R487:489 LMLCProof.Source <> Int constr
R496:505 LMLCProof.Object <> church_int def
R513:515 LMLCProof.Source <> Gtz constr
R522:531 LMLCProof.Object <> church_gtz def
R534:537 LMLCProof.Transpiler <> lmlc:2 def
R539:539 LMLCProof.Transpiler <> M:1 var
R546:549 LMLCProof.Source <> Bool constr
R583:594 LMLCProof.Object <> church_false def
R566:576 LMLCProof.Object <> church_true def
R600:601 LMLCProof.Source <> If constr
R612:620 LMLCProof.Object <> church_if def
R641:644 LMLCProof.Transpiler <> lmlc:2 def
R632:635 LMLCProof.Transpiler <> lmlc:2 def
R623:626 LMLCProof.Transpiler <> lmlc:2 def
R653:656 LMLCProof.Source <> Cons constr
R678:682 LMLCProof.Source <> fresh def
R685:685 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R693:698 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R706:706 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R686:689 LMLCProof.Source <> fvML def
R699:702 LMLCProof.Source <> fvML def
binder 671:673 <> foo:6
R742:746 LMLCProof.Source <> fresh def
R748:748 LMLCProof.Utils <> :::'['_x_';'_'..'_';'_x_']' not
R752:752 LMLCProof.Utils <> :::'['_x_';'_'..'_';'_x_']' not
R749:751 LMLCProof.Transpiler <> foo:6 var
binder 734:737 <> init:7
R761:764 LMLCProof.Object <> Labs constr
R771:774 LMLCProof.Object <> Labs constr
R782:786 LMLCProof.Object <> Lappl constr
R818:822 LMLCProof.Object <> Lappl constr
R854:857 LMLCProof.Object <> Lvar constr
R859:862 LMLCProof.Transpiler <> init:7 var
R825:829 LMLCProof.Object <> Lappl constr
R842:845 LMLCProof.Object <> Lvar constr
R847:849 LMLCProof.Transpiler <> foo:6 var
R832:835 LMLCProof.Transpiler <> lmlc:2 def
R789:793 LMLCProof.Object <> Lappl constr
R807:810 LMLCProof.Transpiler <> lmlc:2 def
R796:799 LMLCProof.Object <> Lvar constr
R801:803 LMLCProof.Transpiler <> foo:6 var
R776:779 LMLCProof.Transpiler <> init:7 var
R766:768 LMLCProof.Transpiler <> foo:6 var
R872:881 LMLCProof.Source <> Fold_right constr
R898:902 LMLCProof.Object <> Lappl constr
R935:938 LMLCProof.Transpiler <> lmlc:2 def
R905:909 LMLCProof.Object <> Lappl constr
R923:926 LMLCProof.Transpiler <> lmlc:2 def
R912:915 LMLCProof.Transpiler <> lmlc:2 def
R949:951 LMLCProof.Source <> Nil constr
R956:959 LMLCProof.Object <> Labs constr
R964:967 LMLCProof.Object <> Labs constr
R972:975 LMLCProof.Object <> Lvar constr
R985:988 LMLCProof.Source <> Pair constr
R1008:1012 LMLCProof.Source <> fresh def
R1022:1025 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R1015:1018 LMLCProof.Source <> fvML def
R1026:1029 LMLCProof.Source <> fvML def
binder 1003:1003 <> z:8
R1038:1041 LMLCProof.Object <> Labs constr
R1046:1050 LMLCProof.Object <> Lappl constr
R1080:1083 LMLCProof.Transpiler <> lmlc:2 def
R1053:1057 LMLCProof.Object <> Lappl constr
R1069:1072 LMLCProof.Transpiler <> lmlc:2 def
R1060:1063 LMLCProof.Object <> Lvar constr
R1065:1065 LMLCProof.Transpiler <> z:8 var
R1043:1043 LMLCProof.Transpiler <> z:8 var
R1094:1096 LMLCProof.Source <> Fst constr
R1113:1117 LMLCProof.Source <> fresh def
R1120:1123 LMLCProof.Source <> fvML def
R1125:1125 LMLCProof.Transpiler <> M:1 var
binder 1107:1108 <> x1:9
R1141:1145 LMLCProof.Source <> fresh def
R1147:1147 LMLCProof.Utils <> :::'['_x_';'_'..'_';'_x_']' not
R1150:1150 LMLCProof.Utils <> :::'['_x_';'_'..'_';'_x_']' not
R1148:1149 LMLCProof.Transpiler <> x1:9 var
binder 1135:1136 <> x2:10
R1171:1175 LMLCProof.Object <> Lappl constr
R1187:1190 LMLCProof.Object <> Labs constr
R1196:1199 LMLCProof.Object <> Labs constr
R1205:1208 LMLCProof.Object <> Lvar constr
R1210:1211 LMLCProof.Transpiler <> x1:9 var
R1201:1202 LMLCProof.Transpiler <> x2:10 var
R1192:1193 LMLCProof.Transpiler <> x1:9 var
R1178:1181 LMLCProof.Transpiler <> lmlc:2 def
R1183:1183 LMLCProof.Transpiler <> M:1 var
R1220:1222 LMLCProof.Source <> Snd constr
R1239:1243 LMLCProof.Source <> fresh def
R1246:1249 LMLCProof.Source <> fvML def
R1251:1251 LMLCProof.Transpiler <> M:1 var
binder 1233:1234 <> x1:11
R1267:1271 LMLCProof.Source <> fresh def
R1273:1273 LMLCProof.Utils <> :::'['_x_';'_'..'_';'_x_']' not
R1276:1276 LMLCProof.Utils <> :::'['_x_';'_'..'_';'_x_']' not
R1274:1275 LMLCProof.Transpiler <> x1:11 var
binder 1261:1262 <> x2:12
R1297:1301 LMLCProof.Object <> Lappl constr
R1313:1316 LMLCProof.Object <> Labs constr
R1322:1325 LMLCProof.Object <> Labs constr
R1331:1334 LMLCProof.Object <> Lvar constr
R1336:1337 LMLCProof.Transpiler <> x2:12 var
R1327:1328 LMLCProof.Transpiler <> x2:12 var
R1318:1319 LMLCProof.Transpiler <> x1:11 var
R1304:1307 LMLCProof.Transpiler <> lmlc:2 def
R1309:1309 LMLCProof.Transpiler <> M:1 var
prf 1354:1359 <> fvML_L
R1375:1381 LMLCProof.Source <> ml_term ind
binder 1371:1371 <> M:13
R1397:1399 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1385:1387 LMLCProof.Object <> fvL def
R1390:1393 LMLCProof.Transpiler <> lmlc def
R1395:1395 LMLCProof.Transpiler <> M:13 var
R1400:1403 LMLCProof.Source <> fvML def
R1405:1405 LMLCProof.Transpiler <> M:13 var
